<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cronograma Semanal</title>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
    />
    <style>
      :root {
        --color-primary: #455994;
        --color-primary-light: #eef1f8;
        --color-primary-dark: #394879;
        --color-text: #1e293b;
        --color-text-light: #64748b;
        --color-border: #e2e8f0;
        --color-background: #ffffff;
        --color-weekend: #f8fafc;
        --color-today: #dbeafe;
        --color-event-1: #455994;
        --color-event-2: #10b981;
        --color-event-3: #f59e0b;
        --color-event-4: #ef4444;
        --radius: 4px;
        --transition: all 0.2s ease;
      }

      body {
        background-color: #f1f5f9;
      }

      .container {
        max-width: 1320px;
        margin: 30px auto;
        padding: 0 20px;
      }

      .week-container {
        background-color: var(--color-background);
        border-radius: var(--radius-md);
        border: 1px solid var(--color-border);
        overflow: hidden;
        margin-bottom: 20px;
      }

      .week-header {
        background-color: var(--color-primary-light);
        color: var(--color-primary);
        padding: 12px 16px;
        font-weight: 600;
        font-size: 15px;
        border-bottom: 1px solid var(--color-border);
      }

      .days-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
      }

      .day-header {
        padding: 12px 10px;
        text-align: center;
        font-weight: 500;
        border-bottom: 1px solid var(--color-border);
        background-color: #f9f9f9;
      }
      .day-name {
        display: block;
        margin-bottom: 6px;
        font-weight: 600;
        font-size: 13px;
        text-transform: uppercase;
        letter-spacing: 0.03em;
        color: var(--color-text-light);
      }
      .day-cell {
        min-height: 120px;
        border-right: 1px solid var(--color-border);
        padding: 10px;
        position: relative;
        transition: var(--transition);
      }
      .day-cell:hover {
        background-color: var(--color-primary-light);
      }
      .day-cell:nth-child(7n) {
        border-right: none;
      }
      .weekend {
        background-color: var(--color-weekend);
      }
      .today {
        background-color: var(--color-today);
      }
      .day-number {
        font-size: 16px;
        font-weight: 600;
        margin-bottom: 8px;
        color: var(--color-text);
        display: inline-block;
        width: 28px;
        height: 28px;
        line-height: 28px;
        text-align: center;
      }
      .today .day-number {
        background-color: var(--color-primary);
        color: white;
        border-radius: 50%;
      }
      .event {
        position: relative;
        margin: 5px 0;
        padding: 8px 10px;
        border-radius: var(--radius);
        font-size: 13px;
        color: white;
        cursor: pointer;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        border: 1px solid var(--color-border);
        transition: var(--transition);
      }
      .event:hover {
        transform: translateY(-2px);
      }
      .event-1 {
        background-color: var(--color-event-1);
      }
      .event-2 {
        background-color: var(--color-event-2);
      }
      .event-3 {
        background-color: var(--color-event-3);
      }
      .event-4 {
        background-color: var(--color-event-4);
      }
      .event-time {
        font-size: 11px;
        font-weight: 500;
        opacity: 0.9;
        margin-bottom: 2px;
      }
      .event-title {
        font-weight: 500;
      }
      .event-actions {
        position: absolute;
        right: 0;
        top: 0;
        bottom: 0;
        display: none;
        align-items: center;
        justify-content: flex-end;
        padding-right: 8px;
        gap: 4px;
        width: 70px;
        border-radius: 0 var(--radius) var(--radius) 0;
        background: linear-gradient(
          to right,
          transparent,
          rgba(0, 0, 0, 0.2) 40%
        );
      }
      .event:hover .event-actions {
        display: flex;
      }
      .event-btn {
        background-color: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        cursor: pointer;
        width: 24px;
        height: 24px;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        transition: var(--transition);
      }
      .event-btn:hover {
        background-color: rgba(255, 255, 255, 0.3);
      }
      .add-event {
        position: absolute;
        bottom: 10px;
        right: 10px;
        width: 28px;
        height: 28px;
        background-color: var(--color-primary);
        color: white;
        border: none;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: 16px;
        opacity: 0;
        transition: var(--transition);
      }
      .day-cell:hover .add-event {
        opacity: 1;
      }
      .add-event:hover {
        transform: scale(1.1);
      }
      .legend {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: 20px;
        padding: 16px 20px;
        border-radius: var(--radius-md);
        background-color: var(--color-background);
        border: 1px solid var(--color-border);
      }
      .legend-item {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
        color: var(--color-text);
      }
      .legend-color {
        width: 14px;
        height: 14px;
        border-radius: 3px;
      }
      /* Modal */
      .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        justify-content: center;
        align-items: center;
      }
      .modal-content {
        background-color: white;
        border-radius: var(--radius-md);
        width: 90%;
        max-width: 500px;
        border: 1px solid var(--color-border);
      }
      .modal-header {
        padding: 16px 20px;
        border-bottom: 1px solid var(--color-border);
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: var(--color-primary-light);
        color: var(--color-primary);
        border-radius: var(--radius-md) var(--radius-md) 0 0;
      }
      .modal-title {
        font-weight: 600;
        font-size: 16px;
      }
      .close-modal {
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
        color: var(--color-primary);
        opacity: 0.8;
      }
      .close-modal:hover {
        opacity: 1;
      }
      .modal-body {
        padding: 20px;
      }
      .form-group {
        margin-bottom: 16px;
      }
      .form-label {
        display: block;
        margin-bottom: 6px;
        font-weight: 500;
        color: var(--color-text);
      }
      .form-control {
        width: 100%;
        padding: 10px 12px;
        border: 1px solid var(--color-border);
        border-radius: var(--radius);
        font-size: 14px;
        transition: border-color 0.2s ease;
      }
      .form-control:focus {
        outline: none;
        border-color: var(--color-primary);
      }
      .modal-footer {
        padding: 16px 20px;
        border-top: 1px solid var(--color-border);
        display: flex;
        justify-content: flex-end;
        gap: 10px;
      }
      .btn {
        padding: 8px 16px;
        border: none;
        border-radius: var(--radius);
        cursor: pointer;
        font-size: 14px;
        font-weight: 500;
        transition: var(--transition);
      }
      .btn-primary {
        background-color: var(--color-primary);
        color: white;
      }
      .btn-primary:hover {
        background-color: var(--color-primary-dark);
        transform: translateY(-1px);
      }
      .btn-secondary {
        background-color: #f1f5f9;
        color: var(--color-text);
      }
      .btn-secondary:hover {
        background-color: #e2e8f0;
      }
      .event-type-selector {
        display: flex;
        gap: 10px;
        margin-bottom: 16px;
      }
      .event-type-option {
        flex: 1;
        text-align: center;
        padding: 8px;
        border-radius: var(--radius);
        cursor: pointer;
        font-size: 13px;
        font-weight: 500;
        color: white;
        opacity: 0.7;
        transition: var(--transition);
      }
      .event-type-option.selected {
        opacity: 1;
        transform: translateY(-2px);
      }
      .event-type-option:hover {
        opacity: 0.9;
      }
      @media (max-width: 768px) {
        .days-grid {
          grid-template-columns: repeat(1, 1fr);
        }
        .day-cell {
          border-right: none;
          border-bottom: 1px solid var(--color-border);
          min-height: 80px;
        }
        .day-cell:last-child {
          border-bottom: none;
        }
        .day-header {
          display: none;
        }
        .day-number {
          font-size: 16px;
          display: flex;
          align-items: center;
        }
        .day-number::before {
          content: attr(data-day);
          margin-right: 5px;
          font-weight: normal;
          color: var(--color-text-light);
        }
        .add-event {
          opacity: 0.8;
        }
        .header {
          flex-direction: column;
          gap: 15px;
          padding: 16px;
        }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div id="weeks-container"></div>
      <div class="legend">
        <div class="legend-item">
          <div
            class="legend-color"
            style="background-color: var(--color-event-1)"
          ></div>
          <span>Reuniones</span>
        </div>
        <div class="legend-item">
          <div
            class="legend-color"
            style="background-color: var(--color-event-2)"
          ></div>
          <span>Proyectos</span>
        </div>
        <div class="legend-item">
          <div
            class="legend-color"
            style="background-color: var(--color-event-3)"
          ></div>
          <span>Personal</span>
        </div>
        <div class="legend-item">
          <div
            class="legend-color"
            style="background-color: var(--color-event-4)"
          ></div>
          <span>Urgente</span>
        </div>
      </div>
    </div>
    <div class="modal" id="eventModal">
      <div class="modal-content">
        <div class="modal-header">
          <h2 class="modal-title" id="modalTitle">Editar Evento</h2>
          <button class="close-modal" onclick="closeModal()">×</button>
        </div>
        <div class="modal-body">
          <form id="eventForm">
            <input type="hidden" id="eventId" />
            <div class="form-group">
              <label for="eventTitle" class="form-label">Título</label>
              <input
                type="text"
                id="eventTitle"
                class="form-control"
                required
              />
            </div>
            <div class="form-group">
              <label for="eventDate" class="form-label">Fecha</label>
              <input type="date" id="eventDate" class="form-control" required />
            </div>
            <div class="form-group">
              <label for="eventTime" class="form-label">Hora</label>
              <input type="time" id="eventTime" class="form-control" required />
            </div>
            <div class="form-group">
              <label for="eventDuration" class="form-label"
                >Duración (minutos)</label
              >
              <input
                type="number"
                id="eventDuration"
                class="form-control"
                min="15"
                step="15"
                value="60"
              />
            </div>
            <div class="form-group">
              <label class="form-label">Tipo de evento</label>
              <div class="event-type-selector">
                <div
                  class="event-type-option event-1 selected"
                  data-type="event-1"
                  onclick="selectEventType(this)"
                >
                  Reunión
                </div>
                <div
                  class="event-type-option event-2"
                  data-type="event-2"
                  onclick="selectEventType(this)"
                >
                  Proyecto
                </div>
                <div
                  class="event-type-option event-3"
                  data-type="event-3"
                  onclick="selectEventType(this)"
                >
                  Personal
                </div>
                <div
                  class="event-type-option event-4"
                  data-type="event-4"
                  onclick="selectEventType(this)"
                >
                  Urgente
                </div>
              </div>
            </div>
            <div class="form-group">
              <label for="eventDescription" class="form-label"
                >Descripción</label
              >
              <textarea
                id="eventDescription"
                class="form-control"
                rows="3"
              ></textarea>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button class="btn btn-secondary" onclick="closeModal()">
            Cancelar
          </button>
          <button class="btn btn-primary" onclick="saveEvent()">Guardar</button>
        </div>
      </div>
    </div>
    <script>
      const today = new Date(),
        weeksContainer = document.getElementById("weeks-container");
      let events = [
        {
          id: 1,
          title: "Reunión de equipo",
          date: new Date(
            today.getFullYear(),
            today.getMonth(),
            today.getDate()
          ),
          time: "09:00",
          duration: 60,
          description: "Reunión semanal con el equipo de desarrollo",
          type: "event-1",
        },
        {
          id: 2,
          title: "Almuerzo con cliente",
          date: new Date(
            today.getFullYear(),
            today.getMonth(),
            today.getDate() + 1
          ),
          time: "13:00",
          duration: 90,
          description: "Almuerzo para discutir el nuevo proyecto",
          type: "event-3",
        },
        {
          id: 3,
          title: "Revisión de diseño",
          date: new Date(
            today.getFullYear(),
            today.getMonth(),
            today.getDate() + 3
          ),
          time: "10:00",
          duration: 45,
          description: "Revisión de nuevos diseños",
          type: "event-2",
        },
        {
          id: 4,
          title: "Entrega de proyecto",
          date: new Date(
            today.getFullYear(),
            today.getMonth(),
            today.getDate() + 4
          ),
          time: "15:00",
          duration: 60,
          description: "Entrega final al cliente",
          type: "event-4",
        },
      ];
      const formatDate = (d) => d.toISOString().split("T")[0],
        getMonday = (d) => {
          let day = d.getDay(),
            diff = d.getDate() - (day === 0 ? 6 : day - 1);
          return new Date(d.setDate(diff));
        };
      function renderWeeks() {
        weeksContainer.innerHTML = "";
        const monday = getMonday(new Date());
        for (let w = 0; w < 10; w++) {
          const weekStart = new Date(monday);
          weekStart.setDate(monday.getDate() + w * 7);
          const weekEnd = new Date(weekStart);
          weekEnd.setDate(weekStart.getDate() + 6);
          const title =
            weekStart.getMonth() === weekEnd.getMonth()
              ? `${weekStart.getDate()} - ${weekEnd.getDate()} ${new Intl.DateTimeFormat(
                  "es-ES",
                  { month: "long", year: "numeric" }
                ).format(weekEnd)}`
              : `${weekStart.toLocaleDateString("es-ES", {
                  day: "numeric",
                  month: "long",
                  year: "numeric",
                })} - ${weekEnd.toLocaleDateString("es-ES", {
                  day: "numeric",
                  month: "long",
                  year: "numeric",
                })}`;
          const weekDiv = document.createElement("div");
          weekDiv.className = "week-container";
          const header = document.createElement("div");
          header.className = "week-header";
          header.textContent = `Semana ${w + 1}: ${title}`;
          weekDiv.appendChild(header);
          const grid = document.createElement("div");
          grid.className = "days-grid";
          [
            "Lunes",
            "Martes",
            "Miércoles",
            "Jueves",
            "Viernes",
            "Sábado",
            "Domingo",
          ].forEach((d) => {
            const dHeader = document.createElement("div");
            dHeader.className = "day-header";
            dHeader.innerHTML = `<div class="day-name">${d}</div>`;
            grid.appendChild(dHeader);
          });
          for (let i = 0; i < 7; i++) {
            const date = new Date(weekStart);
            date.setDate(weekStart.getDate() + i);
            const cell = document.createElement("div");
            cell.className =
              "day-cell" +
              (i > 4 ? " weekend" : "") +
              (date.toDateString() === today.toDateString() ? " today" : "");
            const dayNum = document.createElement("div");
            dayNum.className = "day-number";
            dayNum.textContent = date.getDate();
            dayNum.setAttribute(
              "data-day",
              [
                "Lunes",
                "Martes",
                "Miércoles",
                "Jueves",
                "Viernes",
                "Sábado",
                "Domingo",
              ][i]
            );
            cell.appendChild(dayNum);
            events
              .filter((e) => e.date.toDateString() === date.toDateString())
              .forEach((ev) => {
                const evDiv = document.createElement("div");
                evDiv.className = `event ${ev.type}`;
                evDiv.innerHTML = `<div class="event-time">${ev.time}</div>
                               <div class="event-title">${ev.title}</div>
                               <div class="event-actions">
                                 <button class="event-btn" onclick="openModal(${ev.id}); event.stopPropagation();">✎</button>
                                 <button class="event-btn" onclick="deleteEvent(${ev.id}); event.stopPropagation();">✕</button>
                               </div>`;
                cell.appendChild(evDiv);
              });
            const addBtn = document.createElement("button");
            addBtn.className = "add-event";
            addBtn.textContent = "+";
            addBtn.onclick = () => openModal(null, date);
            cell.appendChild(addBtn);
            grid.appendChild(cell);
          }
          weekDiv.appendChild(grid);
          weeksContainer.appendChild(weekDiv);
        }
      }
      function openModal(id, date) {
        const modal = document.getElementById("eventModal");
        if (id) {
          const ev = events.find((e) => e.id === id);
          document.getElementById("modalTitle").textContent = "Editar Evento";
          document.getElementById("eventId").value = ev.id;
          document.getElementById("eventTitle").value = ev.title;
          document.getElementById("eventDate").value = formatDate(ev.date);
          document.getElementById("eventTime").value = ev.time;
          document.getElementById("eventDuration").value = ev.duration;
          document.getElementById("eventDescription").value =
            ev.description || "";
          document
            .querySelectorAll(".event-type-option")
            .forEach((opt) =>
              opt.classList.toggle(
                "selected",
                opt.getAttribute("data-type") === ev.type
              )
            );
        } else {
          document.getElementById("modalTitle").textContent = "Añadir Evento";
          document.getElementById("eventId").value = "";
          document.getElementById("eventTitle").value = "";
          document.getElementById("eventDate").value = formatDate(date);
          document.getElementById("eventTime").value = "09:00";
          document.getElementById("eventDuration").value = 60;
          document.getElementById("eventDescription").value = "";
          document
            .querySelectorAll(".event-type-option")
            .forEach((opt, i) => opt.classList.toggle("selected", i === 0));
        }
        modal.style.display = "flex";
      }
      const closeModal = () =>
        (document.getElementById("eventModal").style.display = "none");
      function saveEvent() {
        const id = document.getElementById("eventId").value,
          title = document.getElementById("eventTitle").value,
          date = new Date(document.getElementById("eventDate").value),
          time = document.getElementById("eventTime").value,
          duration = parseInt(document.getElementById("eventDuration").value),
          description = document.getElementById("eventDescription").value,
          type = document
            .querySelector(".event-type-option.selected")
            .getAttribute("data-type");
        if (!title) {
          alert("Completa los campos requeridos");
          return;
        }
        if (id)
          events = events.map((e) =>
            e.id == id
              ? { ...e, title, date, time, duration, description, type }
              : e
          );
        else {
          const newId = events.length
            ? Math.max(...events.map((e) => e.id)) + 1
            : 1;
          events.push({
            id: newId,
            title,
            date,
            time,
            duration,
            description,
            type,
          });
        }
        closeModal();
        renderWeeks();
      }
      function deleteEvent(id) {
        if (confirm("¿Eliminar este evento?")) {
          events = events.filter((e) => e.id !== id);
          renderWeeks();
        }
      }
      function selectEventType(el) {
        document
          .querySelectorAll(".event-type-option")
          .forEach((opt) => opt.classList.remove("selected"));
        el.classList.add("selected");
      }
      renderWeeks();
    </script>
  </body>
</html>
